#!/usr/bin/env python2.7
from JumpScale import j
import requests
import json
import time
import JumpScale.baselib.remote
publicip="??"
controller_user="??"
controller_pass="??"
controller_ip="??"
compute1_ip="??"
network_ip="??"
j.remote.fabric.setHost('%s@%s:2222'%(controller_user, publicip,))
j.remote.fabric.setDefaultPasswd(controller_pass, '%s@%s:2222'%(controller_user, publicip))
j.remote.fabric.api.sudo('echo "controller" > /etc/hostname')
j.remote.fabric.api.sudo('echo -e "%s\tcontroller" >> /etc/hosts'%(controller_ip,))
j.remote.fabric.api.sudo('echo -e "%s\tcompute1" >> /etc/hosts'%(compute1_ip,))
j.remote.fabric.api.sudo('echo -e "%s\tnetwork" >> /etc/hosts'%(network_ip,))
j.remote.fabric.api.sudo('apt-get install ntp -y')
j.remote.fabric.api.sudo('apt-get update -y')
j.remote.fabric.api.sudo('apt-get install python-software-properties -y')
j.remote.fabric.api.sudo('echo "deb http://ubuntu-cloud.archive.canonical.com/ubuntu trusty-updates/juno main" > /etc/apt/sources.list.d/ubuntu-cloud-archive-juno-trusty.list')
j.remote.fabric.api.sudo('apt-get install ubuntu-cloud-keyring -y')
j.remote.fabric.api.sudo('apt-get install debconf-utils -y')
j.remote.fabric.api.sudo('echo -e "grub\tgrub/update_grub_changeprompt_threeway\tselect\tinstall_new" | debconf-set-selections')
j.remote.fabric.api.sudo('echo -e "grub-legacy-ec2\tgrub/update_grub_changeprompt_threeway\tselect\tinstall_new" | debconf-set-selections')
j.remote.fabric.api.sudo('apt-get update && apt-get dist-upgrade -y')
##j.remote.fabric.api.sudo('reboot')
j.remote.fabric.api.sudo('echo -e "mariadb-server-5.5\tmysql-server/root_password_again\tpassword\t123@testpass" | debconf-set-selections')
j.remote.fabric.api.sudo('echo -e "mariadb-server-5.5\tmysql-server/root_password\tpassword\t123@testpass" | debconf-set-selections')	
j.remote.fabric.api.sudo('apt-get install mariadb-server python-mysqldb -y')
j.remote.fabric.api.sudo('sed -i \'s/bind-address\t\t= 127.0.0.1/bind-address\t\t= %s/\' /etc/mysql/my.cnf'%(controller_ip,))
j.remote.fabric.api.sudo('sed -i \'/^\[mysqld\]/a character-set-server = utf8\' /etc/mysql/my.cnf')
j.remote.fabric.api.sudo('sed -i \'/^\[mysqld\]/a init-connect = \'SET\ NAMES\ utf8\'\' /etc/mysql/my.cnf')
j.remote.fabric.api.sudo('sed -i \'/^\[mysqld\]/a collation-server = utf8_general_ci\' /etc/mysql/my.cnf')
j.remote.fabric.api.sudo('sed -i \'/^\[mysqld\]/a innodb_file_per_table\' /etc/mysql/my.cnf')
j.remote.fabric.api.sudo('sed -i \'/^\[mysqld\]/a default-storage-engine = innodb\' /etc/mysql/my.cnf')
j.remote.fabric.api.sudo('service mysql restart')
j.remote.fabric.api.sudo('echo "DELETE FROM mysql.user WHERE User=\'\';\nDELETE FROM mysql.user WHERE User=\'root\' AND Host NOT IN (\'localhost\', \'127.0.0.1\', \'::1\');\nDROP DATABASE IF EXISTS test;\nDELETE FROM mysql.db WHERE Db=\'test\' OR Db=\'test\\_\%\';\nFLUSH PRIVILEGES;" > /tmp/test')
j.remote.fabric.api.sudo('mysql -u root -p123@testpass < /tmp/test')
j.remote.fabric.api.sudo('apt-get install rabbitmq-server -y')
j.remote.fabric.api.sudo('rabbitmqctl change_password guest testpass')
####install identity server
j.remote.fabric.api.sudo('echo "CREATE DATABASE keystone;\nGRANT ALL PRIVILEGES ON keystone.* TO \'keystone\'@\'localhost\' IDENTIFIED BY \'testpass\';\nGRANT ALL PRIVILEGES ON keystone.* TO \'keystone\'@\'%\' IDENTIFIED BY \'R00t3r\';\nFLUSH PRIVILEGES;" > /tmp/test1')
j.remote.fabric.api.sudo('mysql -u root -p123@testpass < /tmp/test1')
j.remote.fabric.api.sudo('apt-get install keystone python-keystoneclient -y')
j.remote.fabric.api.sudo('sed -i \'s/^connection/#connection/\' /etc/keystone/keystone.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a admin_token=%s\' /etc/keystone/keystone.conf'%(token,))
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a verbose=True\' /etc/keystone/keystone.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[database\]/a connection=mysql://keystone:testpass@controller/keystone\' /etc/keystone/keystone.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[token\]/a driver=keystone.token.persistence.backends.sql.Token\' /etc/keystone/keystone.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[token\]/a provider=keystone.token.providers.uuid.Provider\' /etc/keystone/keystone.conf')
j.remote.fabric.api.sudo('su -s /bin/sh -c "keystone-manage db_sync" keystone')
j.remote.fabric.api.sudo('service keystone restart')
j.remote.fabric.api.sudo('rm -f /var/lib/keystone/keystone.db')
j.remote.fabric.api.sudo('(crontab -l -u keystone 2>&1 | grep -q token_flush) || \
echo \'@hourly /usr/bin/keystone-manage token_flush >/var/log/keystone/keystone-tokenflush.log 2>&1\' >> /var/spool/cron/crontabs/keystone')
j.remote.fabric.api.sudo('echo "export OS_SERVICE_TOKEN=%s\nexport OS_SERVICE_ENDPOINT=http://controller:35357/v2.0\nexport LC_ALL=C" > /root/admin'%(token,))
j.remote.fabric.api.sudo('source /root/admin; keystone tenant-create --name=admin --description="Admin Tenant"')
j.remote.fabric.api.sudo('source /root/admin; keystone user-create --name=admin --pass=testpass --email=support@mothership1.com')
j.remote.fabric.api.sudo('source /root/admin; keystone role-create --name=admin')
j.remote.fabric.api.sudo('source /root/admin; keystone user-role-add --user=admin --tenant=admin --role=admin')
j.remote.fabric.api.sudo('source /root/admin; keystone role-create --name _member_')
j.remote.fabric.api.sudo('source /root/admin; keystone user-role-add --user=admin --role=_member_ --tenant=admin')
j.remote.fabric.api.sudo('source /root/admin; keystone tenant-create --name=demo --description="Demo Tenant"')
j.remote.fabric.api.sudo('source /root/admin; keystone user-create --name=demo --pass=demo --email=support@mothership1.com')
j.remote.fabric.api.sudo('source /root/admin; keystone user-role-add --user=demo --role=_member_ --tenant=demo')
j.remote.fabric.api.sudo('source /root/admin; keystone tenant-create --name=service --description="Service Tenant"')
j.remote.fabric.api.sudo('source /root/admin; keystone service-create --name=keystone --type=identity --description="OpenStack Identity"')
j.remote.fabric.api.sudo('source /root/admin; keystone endpoint-create --service-id=$(keystone service-list | awk \'/ identity / {print $2}\') --publicurl=http://controller:5000/v2.0 --internalurl=http://controller:5000/v2.0 --adminurl=http://controller:35357/v2.0 --region regionOne')
j.remote.fabric.api.sudo('echo "export OS_TENANT_NAME=admin\nexport OS_USERNAME=admin\nexport OS_PASSWORD=testpass\nexport OS_AUTH_URL=http://controller:35357/v2.0\nexport LC_ALL=C" > /root/admin')
###glance
j.remote.fabric.api.sudo('echo "CREATE DATABASE glance;\nGRANT ALL PRIVILEGES ON glance.* TO \'glance\'@\'localhost\' IDENTIFIED BY \'testpass\';\nGRANT ALL PRIVILEGES ON glance.* TO \'glance\'@\'%\' IDENTIFIED BY \'R00t3r\';\nFLUSH PRIVILEGES;" > /tmp/test2')
j.remote.fabric.api.sudo('mysql -u root -p123@testpass < /tmp/test2')
j.remote.fabric.api.sudo('source /root/admin; keystone user-create --name glance --pass testpass')
j.remote.fabric.api.sudo('source /root/admin; keystone user-role-add --user glance --tenant service --role admin')
j.remote.fabric.api.sudo('source /root/admin; keystone service-create --name glance --type image --description "OpenStack Image Service"')
j.remote.fabric.api.sudo('source /root/admin; keystone endpoint-create --service-id $(keystone service-list | awk \'/ image / {print $2}\') --publicurl http://controller:9292 --internalurl http://controller:9292 --adminurl http://controller:9292 --region regionOne')
j.remote.fabric.api.sudo('apt-get install glance python-glanceclient -y')
j.remote.fabric.api.sudo('sed -i \'s/^connection/#connection/\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'s/^auth_uri/#auth_uri/\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'s/^admin_password/#admin_password/\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'s/^admin_user/#admin_user/\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'s/^admin_tenant_name/#admin_tenant_name/\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'s/^identity_uri/#identity_uri/\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[database\]/a connection = mysql://glance:testpass@controller/glance\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a admin_password = testpass\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a admin_user = glance\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a admin_tenant_name = service\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a identity_uri = http://controller:35357\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a auth_uri = http://controller:5000/v2.0\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[paste_deploy\]/a flavor = keystone\' /etc/glance/glance-api.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[glance_store\]/a default_store = file\' /etc/glance/glance-api.conf')
###j.remote.fabric.api.sudo('sed -i \'/^\[glance_store\]/a filesystem_store_datadir = /var/lib/glance/images/\' /etc/glance/glance-api.conf')
#####another config file /etc/glance/glance-registry.conf
j.remote.fabric.api.sudo('sed -i \'s/^connection/#connection/\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('sed -i \'s/^auth_uri/#auth_uri/\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('sed -i \'s/^admin_password/#admin_password/\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('sed -i \'s/^admin_user/#admin_user/\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('sed -i \'s/^admin_tenant_name/#admin_tenant_name/\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('sed -i \'s/^identity_uri/#identity_uri/\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[database\]/a connection = mysql://glance:testpass@controller/glance\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a admin_password = testpass\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a admin_user = glance\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a admin_tenant_name = service\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a identity_uri = http://controller:35357\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a auth_uri = http://controller:5000/v2.0\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[paste_deploy\]/a flavor = keystone\' /etc/glance/glance-registry.conf')
j.remote.fabric.api.sudo('su -s /bin/sh -c "glance-manage db_sync" glance')
j.remote.fabric.api.sudo('service glance-registry restart')
j.remote.fabric.api.sudo('service glance-api restart')
j.remote.fabric.api.sudo('rm -f /var/lib/glance/glance.sqlite')

#####compute conf"test2"
j.remote.fabric.api.sudo('echo "CREATE DATABASE nova;\nGRANT ALL PRIVILEGES ON nova.* TO \'nova\'@\'localhost\' IDENTIFIED BY \'testpass\';\nGRANT ALL PRIVILEGES ON nova.* TO \'nova\'@\'%\' IDENTIFIED BY \'R00t3r\';\nFLUSH PRIVILEGES;" > /tmp/test3')
j.remote.fabric.api.sudo('mysql -u root -p123@testpass < /tmp/test3')
j.remote.fabric.api.sudo('source /root/admin; keystone user-create --name nova --pass testpass')
j.remote.fabric.api.sudo('source /root/admin; keystone user-role-add --user nova --tenant service --role admin')
j.remote.fabric.api.sudo('source /root/admin; keystone service-create --name nova --type compute --description "OpenStack Compute"')
j.remote.fabric.api.sudo('source /root/admin; keystone endpoint-create --service-id $(keystone service-list | awk \'/ compute / {print $2}\') --publicurl http://controller:8774/v2/%\(tenant_id\)s --internalurl http://controller:8774/v2/%\(tenant_id\)s --adminurl http://controller:8774/v2/%\(tenant_id\)s --region regionOne')
j.remote.fabric.api.sudo('apt-get install nova-api nova-cert nova-conductor nova-consoleauth nova-novncproxy nova-scheduler python-novaclient -y')
j.remote.fabric.api.sudo('echo "[database]" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "connection = mysql://nova:testpass@controller/nova" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "[keystone_authtoken]" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "auth_uri = http://controller:5000/v2.0" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "identity_uri = http://controller:35357" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "admin_tenant_name = service" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "admin_user = nova" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "admin_password = testpass" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "[glance]" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "host = controller" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a rpc_backend = rabbit\' /etc/nova/nova.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a rabbit_host = controller\' /etc/nova/nova.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a rabbit_password = testpass\' /etc/nova/nova.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a auth_strategy = keystone\' /etc/nova/nova.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a my_ip = %s\' /etc/nova/nova.conf'%(controller_ip,))
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a vncserver_listen = %s\' /etc/nova/nova.conf'%(controller_ip,))
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a vncserver_proxyclient_address = %s\' /etc/nova/nova.conf'%(controller_ip,))
j.remote.fabric.api.sudo('su -s /bin/sh -c "nova-manage db sync" nova')
j.remote.fabric.api.sudo('service nova-api restart')
j.remote.fabric.api.sudo('service nova-cert restart')
j.remote.fabric.api.sudo('service nova-consoleauth restart')
j.remote.fabric.api.sudo('service nova-scheduler restart')
j.remote.fabric.api.sudo('service nova-conductor restart')
j.remote.fabric.api.sudo('service nova-novncproxy restart')
j.remote.fabric.api.sudo('rm -f /var/lib/nova/nova.sqlite')

###networking
j.remote.fabric.api.sudo('echo "CREATE DATABASE neutron;\nGRANT ALL PRIVILEGES ON neutron.* TO \'neutron\'@\'localhost\' IDENTIFIED BY \'testpass\';\nGRANT ALL PRIVILEGES ON neutron.* TO \'neutron\'@\'%\'IDENTIFIED BY \'R00t3r\';\nFLUSH PRIVILEGES;" > /tmp/test4')
j.remote.fabric.api.sudo('mysql -u root -p123@testpass < /tmp/test4')
j.remote.fabric.api.sudo('source /root/admin; keystone user-create --name neutron --pass testpass')
j.remote.fabric.api.sudo('source /root/admin; keystone user-role-add --user neutron --tenant service --role admin')
j.remote.fabric.api.sudo('source /root/admin; keystone service-create --name neutron --type network --description "OpenStack Networking"')
j.remote.fabric.api.sudo('source /root/admin; keystone endpoint-create --service-id $(keystone service-list | awk \'/ network / {print $2}\') --publicurl http://controller:9696 --adminurl http://controller:9696 --internalurl http://controller:9696 --region regionOne')
j.remote.fabric.api.sudo('apt-get install neutron-server neutron-plugin-ml2 python-neutronclient -y')
#######/etc/neutron/neutron.conf
j.remote.fabric.api.sudo('source /root/admin; keystone tenant-get service > /tmp/test5')
j.remote.fabric.api.sudo('sed -i \'s/^connection/#connection/\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'s/^auth_uri/#auth_uri/\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'s/^admin_password/#admin_password/\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'s/^admin_user/#admin_user/\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'s/^admin_tenant_name/#admin_tenant_name/\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'s/^identity_uri/#identity_uri/\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'s/^core_plugin/#core_plugin/\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[database\]/a connection = mysql://neutron:testpass@controller/neutron\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a rabbit_host = controller\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a rabbit_password = testpass\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a auth_strategy = keystone\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a admin_password = testpass\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a admin_user = neutron\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a admin_tenant_name = service\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a identity_uri = http://controller:35357\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[keystone_authtoken\]/a auth_uri = http://controller:5000/v2.0\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a core_plugin = ml2\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a service_plugins = router\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a allow_overlapping_ips = True\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a notify_nova_on_port_status_changes = True\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a notify_nova_on_port_data_changes = True\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a nova_url = http://controller:8774/v2\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a nova_admin_auth_url = http://controller:35357/v2.0\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a nova_region_name = regionOne\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a nova_admin_username = nova\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a nova_admin_tenant_id = \`cat /tmp/test5 | grep id | awk \'{ print $4}\'\`\' /etc/neutron/neutron.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a nova_admin_password = testpass\' /etc/neutron/neutron.conf')
###another config file /etc/neutron/plugins/ml2/ml2_conf.ini
j.remote.fabric.api.sudo('sed -i \'/^\[ml2\]/a type_drivers = flat,gre \' /etc/neutron/plugins/ml2/ml2_conf.ini')
j.remote.fabric.api.sudo('sed -i \'/^\[ml2\]/a tenant_network_types = gre \' /etc/neutron/plugins/ml2/ml2_conf.ini')
j.remote.fabric.api.sudo('sed -i \'/^\[ml2\]/a mechanism_drivers = openvswitch \' /etc/neutron/plugins/ml2/ml2_conf.ini')
j.remote.fabric.api.sudo('sed -i \'/^\[ml2_type_gre\]/a tunnel_id_ranges = 1:1000 \' /etc/neutron/plugins/ml2/ml2_conf.ini')
j.remote.fabric.api.sudo('sed -i \'/^\[securitygroup\]/a enable_security_group = True\' /etc/neutron/plugins/ml2/ml2_conf.ini')
j.remote.fabric.api.sudo('sed -i \'/^\[securitygroup\]/a enable_ipset = True \' /etc/neutron/plugins/ml2/ml2_conf.ini')
j.remote.fabric.api.sudo('sed -i \'/^\[securitygroup\]/a firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver\' /etc/neutron/plugins/ml2/ml2_conf.ini')
###another config file /etc/nova/nova.conf
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a network_api_class = nova.network.neutronv2.api.API \' /etc/nova/nova.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a security_group_api = neutron \' /etc/nova/nova.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a linuxnet_interface_driver = nova.network.linux_net.LinuxOVSInterfaceDriver \' /etc/nova/nova.conf')
j.remote.fabric.api.sudo('sed -i \'/^\[DEFAULT\]/a firewall_driver = nova.virt.firewall.NoopFirewallDriver \' /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "[neutron]" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "url = http://controller:9696" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "auth_strategy = keystone" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "admin_auth_url = http://controller:35357/v2.0" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "admin_tenant_name = service" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "admin_username = neutron" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "admin_password = testpass" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "service_metadata_proxy = True" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('echo "metadata_proxy_shared_secret = testpass" >> /etc/nova/nova.conf')
j.remote.fabric.api.sudo('su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade juno" neutron')
j.remote.fabric.api.sudo('service nova-api restart')
j.remote.fabric.api.sudo('service nova-scheduler restart')
j.remote.fabric.api.sudo('service nova-conductor restart')
j.remote.fabric.api.sudo('service neutron-server restart')
j.remote.fabric.api.sudo('source /root/admin; neutron net-create ext-net --shared --router:external True --provider:physical_network external --provider:network_type flat')
j.remote.fabric.api.sudo('source /root/admin; neutron subnet-create ext-net --name ext-subnet --allocation-pool start=192.168.11.100,end=192.168.11.200 --disable-dhcp --gateway 192.168.11.1 192.168.11.0/24')
j.remote.fabric.api.sudo('source /root/admin; neutron net-create demo-net')
j.remote.fabric.api.sudo('source /root/admin; neutron subnet-create demo-net --name demo-subnet --gateway 192.168.1.1 192.168.1.0/24')
j.remote.fabric.api.sudo('source /root/admin; neutron router-create demo-router')
j.remote.fabric.api.sudo('source /root/admin; neutron router-interface-add demo-router demo-subnet')
j.remote.fabric.api.sudo('source /root/admin; neutron router-gateway-set demo-router ext-net')
###dashboard
j.remote.fabric.api.sudo('apt-get install openstack-dashboard apache2 libapache2-mod-wsgi memcached python-memcache -y')
j.remote.fabric.api.sudo('sed -i \'s/OPENSTACK_HOST = "127.0.0.1"/OPENSTACK_HOST = controller/\' /etc/openstack-dashboard/local_settings.py')
j.remote.fabric.api.sudo('service apache2 restart')
j.remote.fabric.api.sudo('service memcached restart')
